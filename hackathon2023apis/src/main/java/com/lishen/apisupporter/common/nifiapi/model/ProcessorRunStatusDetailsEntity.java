/*
 * NiFi Rest API
 * The Rest API provides programmatic access to command and control a NiFi instance in real time. Start and                                             stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * OpenAPI spec version: 1.23.2
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.lishen.apisupporter.common.nifiapi.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * ProcessorRunStatusDetailsEntity
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-09-13T23:19:14.614+09:00")
public class ProcessorRunStatusDetailsEntity {
    @SerializedName("revision")
    private RevisionDTO revision = null;

    @SerializedName("permissions")
    private PermissionsDTO permissions = null;

    @SerializedName("runStatusDetails")
    private ProcessorRunStatusDetailsDTO runStatusDetails = null;

    public ProcessorRunStatusDetailsEntity revision(RevisionDTO revision) {
        this.revision = revision;
        return this;
    }

    /**
     * The revision for the Processor.
     *
     * @return revision
     **/
    @ApiModelProperty(value = "The revision for the Processor.")
    public RevisionDTO getRevision() {
        return revision;
    }

    public void setRevision(RevisionDTO revision) {
        this.revision = revision;
    }

    public ProcessorRunStatusDetailsEntity permissions(PermissionsDTO permissions) {
        this.permissions = permissions;
        return this;
    }

    /**
     * The permissions for the Processor.
     *
     * @return permissions
     **/
    @ApiModelProperty(value = "The permissions for the Processor.")
    public PermissionsDTO getPermissions() {
        return permissions;
    }

    public void setPermissions(PermissionsDTO permissions) {
        this.permissions = permissions;
    }

    public ProcessorRunStatusDetailsEntity runStatusDetails(ProcessorRunStatusDetailsDTO runStatusDetails) {
        this.runStatusDetails = runStatusDetails;
        return this;
    }

    /**
     * The details of a Processor&#39;s run status
     *
     * @return runStatusDetails
     **/
    @ApiModelProperty(value = "The details of a Processor's run status")
    public ProcessorRunStatusDetailsDTO getRunStatusDetails() {
        return runStatusDetails;
    }

    public void setRunStatusDetails(ProcessorRunStatusDetailsDTO runStatusDetails) {
        this.runStatusDetails = runStatusDetails;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ProcessorRunStatusDetailsEntity processorRunStatusDetailsEntity = (ProcessorRunStatusDetailsEntity) o;
        return Objects.equals(this.revision, processorRunStatusDetailsEntity.revision) &&
                Objects.equals(this.permissions, processorRunStatusDetailsEntity.permissions) &&
                Objects.equals(this.runStatusDetails, processorRunStatusDetailsEntity.runStatusDetails);
    }

    @Override
    public int hashCode() {
        return Objects.hash(revision, permissions, runStatusDetails);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ProcessorRunStatusDetailsEntity {\n");

        sb.append("    revision: ").append(toIndentedString(revision)).append("\n");
        sb.append("    permissions: ").append(toIndentedString(permissions)).append("\n");
        sb.append("    runStatusDetails: ").append(toIndentedString(runStatusDetails)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

